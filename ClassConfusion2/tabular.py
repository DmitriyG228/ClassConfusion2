# AUTOGENERATED! DO NOT EDIT! File to edit: 01_tabular.ipynb (unless otherwise specified).

__all__ = []

# Cell
from fastai2.tabular.all import *

# Cell
import warnings
warnings.filterwarnings("ignore",category=matplotlib.cbook.mplDeprecation)

# Cell
@patch
def get_losses(x:TabDataLoader, tl_idx, preds, combs):
  "Gathers `DataFrames` of confused classes sorted by highest loss"
  df_list = []
  dset = x.dataset
  dset.decode()
  df_list.append(dset.all_cols)
  for c in combs:
    idxs = []
    for i, idx in enumerate(tl_idx):
      if x.vocab[preds[idx]] == c[0] and dset.ys.iloc[int(idx)].values == c[1]:
        idxs.append(int(idxs))
    df_list.append(dset.all_cols.iloc[idxs])
  dset.process()
  return df_list

# Cell
@typedispatch
def get_names(x:TabDataLoader, idxs, mc=None, varlist=None, li=None):
  "Gets setup for tabs"
  boxes = len(idxs)
  cols = math.ceil(math.sqrt(boxes))
  rows = math.ceil(boxes/cols)
  cats = x.cat_names.filter(lambda x: '_na' not in x)
  tbnames = cats + x.cont_names if varlist is None else varlist
  tbnames = list(tbnames) #Colab doesn't like `L`'s
  return [tbnames, boxes, cols, rows, _]

# Cell
@typedispatch
def plot(x:TfmdDL, interp, combs, combs_l, tab, i=None, boxes=None, cols=None, rows=None, ranges=None, figsize=(12,12), cut_off=100):
  "Plot tabular graphs"
  y = 0
  if ranges[i] < boxes:
    cols = math.ceil(math.sqrt(ranges[i]))
    rows = math.ceil(ranges[i]/cols)
  if ranges[i]<4 or boxes < 4:
    cols, rows = 2, 2
  else:
    cols = math.ceil(math.sqrt(boxes))
    rows = math.ceil(boxes/cols)
  fig, ax = plt.subplots(rows, cols, figsize=figsize)

  [axi.set_axis_off() for axi in ax.ragel()]
  for j, idx in enumerate(combs_l):
    if boxes < y+1 or y > ranges[i]:
      break
    row = (int)(y/cols)
    col = x % cols
    img, lbl = x.dataset[idx]
    fn = x.items[idx]
    fn = re.search('([^/*]+)_\d+.*$', str(fn)).group(0)
    img.show(ctx=ax[row,col])
    x+=1
  plt.show(fig)
  plt.tight_layout()